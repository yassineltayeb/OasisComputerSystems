// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OasisComputerSystems.API.Data;

namespace OasisComputerSystems.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200123183219_AddStatuAndRemindersAndHighPriorityToTicket")]
    partial class AddStatuAndRemindersAndHighPriorityToTicket
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TechnicalDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VATNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Mauritius - Port Louis",
                            CountryId = 6,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5628),
                            IsDeleted = false,
                            NameAr = "وسيط المدينة",
                            NameEn = "City Brokers",
                            TechnicalDetails = "Details 1",
                            TelephoneNumber = "11",
                            VATNo = "1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Saudi Arabia - Jeddah",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5763),
                            IsDeleted = false,
                            NameAr = "مسارات",
                            NameEn = "Masarat",
                            TechnicalDetails = "Details 2",
                            TelephoneNumber = "22",
                            VATNo = "2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Lebanon - Beirut",
                            CountryId = 3,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5770),
                            IsDeleted = false,
                            NameAr = "بلاتينيوم",
                            NameEn = "Platinum",
                            TechnicalDetails = "Details 3",
                            TelephoneNumber = "33",
                            VATNo = "3"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Lebanon - Beirut",
                            CountryId = 3,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5804),
                            IsDeleted = false,
                            NameAr = "قروب ميد",
                            NameEn = "GMRB",
                            TechnicalDetails = "Details 4",
                            TelephoneNumber = "44",
                            VATNo = "4"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Saudi Arabia - Jeddah",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5807),
                            IsDeleted = false,
                            NameAr = "قروب ميد",
                            NameEn = "GMIB",
                            TechnicalDetails = "Details 5",
                            TelephoneNumber = "55",
                            VATNo = "5"
                        },
                        new
                        {
                            Id = 6,
                            Address = "UAE - Dubai",
                            CountryId = 4,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5812),
                            IsDeleted = false,
                            NameAr = "الحماية",
                            NameEn = "Alhimaya",
                            TechnicalDetails = "Details 6",
                            TelephoneNumber = "66",
                            VATNo = "6"
                        },
                        new
                        {
                            Id = 7,
                            Address = "UAE - Dubai",
                            CountryId = 4,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5816),
                            IsDeleted = false,
                            NameAr = "المنارة",
                            NameEn = "Al Manarah",
                            TechnicalDetails = "Details 7",
                            TelephoneNumber = "77",
                            VATNo = "7"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Saudi Arabia - Jeddah",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5820),
                            IsDeleted = false,
                            NameAr = "اب بلس",
                            NameEn = "APPlus",
                            TechnicalDetails = "Details 8",
                            TelephoneNumber = "88",
                            VATNo = "8"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Saudi Arabia - Riyadh",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5824),
                            IsDeleted = false,
                            NameAr = "افق",
                            NameEn = "Ofooq",
                            TechnicalDetails = "Details 99",
                            TelephoneNumber = "99",
                            VATNo = "9"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Saudi Arabia - Jeddah",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5828),
                            IsDeleted = false,
                            NameAr = "كونكورد",
                            NameEn = "Concord",
                            TechnicalDetails = "Details 10",
                            TelephoneNumber = "1010",
                            VATNo = "10"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Saudi Arabia - Riyadh",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5831),
                            IsDeleted = false,
                            NameAr = "بروكر كير",
                            NameEn = "Broker Care",
                            TechnicalDetails = "Details 11",
                            TelephoneNumber = "1111",
                            VATNo = "11"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Saudi Arabia - Jeddah",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5835),
                            IsDeleted = false,
                            NameAr = "رؤية الوسيط",
                            NameEn = "Broker Vision",
                            TechnicalDetails = "Details 12",
                            TelephoneNumber = "1212",
                            VATNo = "12"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Saudi Arabia - Jeddah",
                            CountryId = 2,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5839),
                            IsDeleted = false,
                            NameAr = "حازم",
                            NameEn = "Hazim",
                            TechnicalDetails = "Details 13",
                            TelephoneNumber = "1313",
                            VATNo = "13"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Sudan - Khartoum",
                            CountryId = 1,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5843),
                            IsDeleted = false,
                            NameAr = "النيلين للتأمين",
                            NameEn = "Elnilein Insurance Company",
                            TechnicalDetails = "Details 14",
                            TelephoneNumber = "1414",
                            VATNo = "14"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Sudan - Khartoum",
                            CountryId = 1,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2020, 1, 23, 20, 32, 18, 963, DateTimeKind.Local).AddTicks(5847),
                            IsDeleted = false,
                            NameAr = "سويسس",
                            NameEn = "Swiss",
                            TechnicalDetails = "Details 15",
                            TelephoneNumber = "1515",
                            VATNo = "15"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.ClientContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientsContacts");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.ClientContactSupport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientsContactsSupport");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.ClientsModules", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("SystemModuleId")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "SystemModuleId");

                    b.HasIndex("SystemModuleId");

                    b.ToTable("ClientsModules");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = 4,
                            Name = "United Arab Emirate"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mauritius"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Married"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Widowed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Divorced"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Separated"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sudanese"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Saudi"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Religions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Muslim"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Non-Muslim"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "474466a1-69c3-4475-b075-423c021fcb68",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "c3ecf0b4-0bb4-4b63-8a1c-5fe3df2c8f48",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "368d6970-3283-4e1c-93a6-c622b3f290e5",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.StaffProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ReligionId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.StaffProfileRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.SystemModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SystemsModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Master Tables"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clients Management"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Production (Insurance)"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Production (Reinsurance - Facultative)"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Production (Reinsurance - Facultative Claims)"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Production (Reinsurance - Treaties)"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Production (Reinsurance - Treaties Claims)"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Customer Service Management"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Claims Management"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Finance Management"
                        },
                        new
                        {
                            Id = 13,
                            Name = "System Administrator"
                        });
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HighPriority")
                        .HasColumnType("bit");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reminders")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("SubmittedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SystemModuleId")
                        .HasColumnType("int");

                    b.Property<int>("TicketNo")
                        .HasColumnType("int");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ClosedById");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SubmittedById");

                    b.HasIndex("SystemModuleId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.TicketNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OasisComment")
                        .HasColumnType("bit");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketNotes");
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TicketTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Technical Support"
                        },
                        new
                        {
                            Id = 2,
                            Name = "System Bug"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Change Request"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Client", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.ClientContact", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Client", "Client")
                        .WithMany("ClientContacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.ClientContactSupport", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Client", "Client")
                        .WithMany("ClientContactSupports")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.ClientsModules", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Client", "Client")
                        .WithMany("ClientsModules")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.SystemModule", "SystemModule")
                        .WithMany("ClientsModules")
                        .HasForeignKey("SystemModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.StaffProfile", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.StaffProfileRole", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.Role", "Role")
                        .WithMany("StaffProfileRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "StaffProfile")
                        .WithMany("StaffProfileRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.Ticket", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OasisComputerSystems.API.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "ClosedBy")
                        .WithMany()
                        .HasForeignKey("ClosedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OasisComputerSystems.API.Models.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.SystemModule", "SystemModule")
                        .WithMany()
                        .HasForeignKey("SystemModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OasisComputerSystems.API.Models.TicketNote", b =>
                {
                    b.HasOne("OasisComputerSystems.API.Models.StaffProfile", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OasisComputerSystems.API.Models.Ticket", "Ticket")
                        .WithMany("TicketNotes")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
